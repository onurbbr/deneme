// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SporcialAPI.Persistence.Contexts;

#nullable disable

namespace SporcialAPI.Persistence.Migrations
{
    [DbContext(typeof(SporcialAPIDbContext))]
    partial class SporcialAPIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SporcialAPI.Domain.Entities.HealthInformation", b =>
                {
                    b.Property<Guid>("HealthInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<float>("BMI")
                        .HasColumnType("real");

                    b.Property<int>("ScreenTime")
                        .HasColumnType("integer");

                    b.Property<int>("StepCount")
                        .HasColumnType("integer");

                    b.HasKey("HealthInformationId");

                    b.ToTable("HealthInformations");
                });

            modelBuilder.Entity("SporcialAPI.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("HealthAgreement")
                        .HasColumnType("boolean");

                    b.Property<bool>("UserAgreement")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UserBirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserHeight")
                        .HasColumnType("integer");

                    b.Property<string>("UserLocation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserProfilePhoto")
                        .HasColumnType("text");

                    b.Property<string>("UserSurname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserWeight")
                        .HasColumnType("integer");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SporcialAPI.Domain.Entities.UserActivity", b =>
                {
                    b.Property<Guid>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ActivityDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ActivityDuration")
                        .HasColumnType("integer");

                    b.Property<string>("ActivityType")
                        .HasColumnType("text");

                    b.HasKey("ActivityId");

                    b.ToTable("UserActivities");
                });
#pragma warning restore 612, 618
        }
    }
}
